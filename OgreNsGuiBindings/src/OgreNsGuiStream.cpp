////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#include "pch.h"
#include "OgreNsGuiStream.h"


using namespace Noesis;


////////////////////////////////////////////////////////////////////////////////////////////////////
OgreNsGuiStream::OgreNsGuiStream(Ogre::DataStreamPtr dataStream): mDataStream(dataStream)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
OgreNsGuiStream::~OgreNsGuiStream()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NsBool OgreNsGuiStream::CanSeek() const
{
	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OgreNsGuiStream::SetPosition(NsSize pos)
{
	if(!mDataStream.isNull())
	{
		mDataStream->seek((size_t)pos);
	}	
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NsSize OgreNsGuiStream::GetPosition() const
{
	if(!mDataStream.isNull())
	{
		return mDataStream->tell();
	}	
	return 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OgreNsGuiStream::SetLength(NsSize length)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NsSize OgreNsGuiStream::GetLength() const
{
	if(!mDataStream.isNull())
	{
		return mDataStream->size();
	}	

	return 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NsBool OgreNsGuiStream::CanRead() const
{
	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OgreNsGuiStream::Read(void* buffer, NsSize size)
{
	if(!mDataStream.isNull())
	{
		mDataStream->read(buffer, size);
	}	
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OgreNsGuiStream::Close()
{
	if(!mDataStream.isNull())
	{
		mDataStream->close();
	}
}